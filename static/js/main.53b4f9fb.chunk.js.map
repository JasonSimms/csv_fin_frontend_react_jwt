{"version":3,"sources":["services/auth.service.js","services/auth-header.js","services/transaction.service.js","components/login.component.js","components/profile.component.js","components/register.component.js","services/user.service.js","components/board-user.component.js","components/home.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","res","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","authHeader","user","Authorization","get","headers","required","value","className","role","Component","isEmail","vpassword","length","got","Example","useState","transactions","setTransaction","onClick","console","log","TransactionService","getTransactions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4NAGMA,EAAU,uCAgCD,M,8FA5BLC,EAAOC,GACT,OAAOC,IAAMC,KAAKJ,EAAU,SAAU,CAClCC,QAAOC,aACRG,MAAK,SAAAC,GAKJ,OAJGA,EAAIC,KAAKC,aACRC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAAIC,OAG7CD,EAAIC,U,+BAKnBE,aAAaI,WAAW,U,+BAInBZ,EAAMC,GACX,OAAOC,IAAMC,KAAKJ,EAAU,SAAU,CAClCC,QAAMC,e,uCAKV,OAAOS,KAAKG,MAAML,aAAaM,QAAQ,a,MC/B5B,SAASC,IACpB,IAAMC,EAAON,KAAKG,MAAML,aAAaM,QAAQ,SAE7C,OAAGE,GAAQA,EAAKT,YACL,CAAEU,cAAe,SAAWD,EAAKT,aAC/B,GCDjB,IAAMR,EAAU,uCAcD,M,2GATP,OAAOG,IAAMgB,IAAInB,EAAS,CAAEoB,QAAS,CAAC,8BAAgC,S,wCAItE,OAAOjB,IAAMgB,IAAInB,EAAU,mBAAoB,CAAEoB,QAASJ,U,gFCL5DK,EAAW,SAAAC,GACb,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sC,GAO6BC,YCfAA,Y,OCK/BJ,EAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOAvB,EAAQ,SAAAqB,GACZ,IAAKI,kBAAQJ,GACX,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,yCAiBAG,EAAY,SAAAL,GAChB,GAAIA,EAAMM,OAAS,GAAKN,EAAMM,OAAS,GACrC,OACE,qBAAKL,UAAU,qBAAqBC,KAAK,QAAzC,gECrCAxB,GD4CgCyB,YC5CtB,wCAqBD,M,2GAhBP,OAAOtB,IAAMgB,IAAInB,EAAQ,S,qCAIzB,OAAOG,IAAMgB,IAAInB,EAAU,OAAQ,CAAEoB,QAASJ,Q,0CAI9C,OAAOb,IAAMgB,IAAInB,EAAU,MAAO,CAACoB,QAAUJ,Q,sCAI7C,OAAOb,IAAM0B,IAAI7B,EAAU,QAAS,CAAEoB,QAAUJ,U,MCjBjBS,Y,YCALA,YCgCnBK,MAxBf,WAAmB,MAEsBC,mBAAS,IAF/B,mBAEVC,EAFU,KAEIC,EAFJ,KAcjB,OACE,gCACE,6CAAgBtB,KAAKC,UAAUoB,GAA/B,YACA,wBAAQE,QAbZ,WACIC,QAAQC,IAAI,WACZC,EAAmBC,kBAAkBjC,MAAK,SAAAC,GAEtC,OADA6B,QAAQC,IAAI,WAAW9B,EAAIC,MACpB0B,EAAe3B,EAAIC,UAS9B,0BCjBSgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.53b4f9fb.chunk.js","sourcesContent":["import axios from \"axios\";\n//TODO SET API\n// const API_URL = \"http://localhost:8080/api/auth\";\nconst API_URL = \"https://cc-vendors-api.herokuapp.com\";\n\n\nclass AuthService {\n    login(email, password) {\n        return axios.post(API_URL + 'signin', {\n            email, password\n        }).then(res => {\n            if(res.data.accessToken){\n                localStorage.setItem('user', JSON.stringify(res.data));\n            }\n\n            return res.data;\n        })\n    }\n\nlogout() {\n    localStorage.removeItem(\"user\");\n  }\n\n//TODO add encryption\nregister(email,password) {\n    return axios.post(API_URL + 'signup', {\n        email,password\n    })\n}\n\ngetCurrentUser(){\n    return JSON.parse(localStorage.getItem('user'));\n}\n}\n\nexport default new AuthService();","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if(user && user.accessToken){\n        return { Authorization: 'Bearer' + user.accessToken };\n    }else return {};\n}\n\n//TODO Backend\n// export default function authHeader() {\n//     const user = JSON.parse(localStorage.getItem('user'));\n  \n//     if (user && user.accessToken) {\n//       // for Node.js Express back-end\n//       return { 'x-access-token': user.accessToken };\n//     } else {\n//       return {};\n//     }\n//   }","import axios from 'axios';\nimport authHeader from './auth-header';\n\n// const API_URL = 'http://localhost:8080/api/test/';\nconst API_URL = \"https://cc-vendors-api.herokuapp.com\";\n\n\nclass TransactionService {\n    getPublicContent(){\n        return axios.get(API_URL, { headers: {\"Access-Control-Allow-Origin\" : \"*\" } });\n    }\n\n    getTransactions() {\n        return axios.get(API_URL + '/api/transaction', { headers: authHeader() });\n    }\n\n}\n\nexport default new TransactionService();","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n    if (!value) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This field is required!\n        </div>\n      );\n    }\n  };\n  \n  export default class Login extends Component {\n\n    //TODO change to hooks\n    constructor(props) {\n      super(props);\n      this.handleLogin = this.handleLogin.bind(this);\n      this.onChangeUsername = this.onChangeUsername.bind(this);\n      this.onChangePassword = this.onChangePassword.bind(this);\n  \n      this.state = {\n        password: \"\",\n        loading: false,\n        message: \"\"\n      };\n    }\n  \n    onChangeUsername(e) {\n      this.setState({\n        username: e.target.value\n      });\n    }\n  \n    onChangePassword(e) {\n      this.setState({\n        password: e.target.value\n      });\n    }\n  \n    handleLogin(e) {\n      e.preventDefault();\n  \n      this.setState({\n        message: \"\",\n        loading: true\n      });\n  \n      this.form.validateAll();\n  \n      if (this.checkBtn.context._errors.length === 0) {\n        AuthService.login(this.state.username, this.state.password).then(\n          () => {\n            this.props.history.push(\"/profile\");\n            window.location.reload();\n          },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n  \n            this.setState({\n              loading: false,\n              message: resMessage\n            });\n          }\n        );\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  \n    render() {\n      return (\n        <div className=\"col-md-12\">\n          <div className=\"card card-container\">\n            {/* <img\n              src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n              alt=\"profile-img\"\n              className=\"profile-img-card\"\n            /> */}\n  \n            <Form\n              onSubmit={this.handleLogin}\n              ref={c => {\n                this.form = c;\n              }}\n            >\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChangeUsername}\n                  validations={[required]}\n                />\n              </div>\n  \n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangePassword}\n                  validations={[required]}\n                />\n              </div>\n  \n              <div className=\"form-group\">\n                <button\n                  className=\"btn btn-primary btn-block\"\n                  disabled={this.state.loading}\n                >\n                  {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Login</span>\n                </button>\n              </div>\n  \n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={c => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n          </div>\n        </div>\n      );\n    }\n  }\n  ","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    if(!currentUser) return <div><h2>NO current user for profile</h2></div>\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.email}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          {/* <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          /> */}\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\n// const API_URL = 'http://localhost:8080/api/test/';\nconst API_URL = \"https://cc-vendors-api.herokuapp.com\";\n\n\nclass UserService {\n    getPublicContent(){\n        return axios.get(API_URL+'all');\n    }\n\n    getUserBoard() {\n        return axios.get(API_URL + 'user', { headers: authHeader() });\n    }\n\n    getModeratorBoard() {\n        return axios.get(API_URL + 'mod', {headers : authHeader() })\n    }\n\n    getAdminBoard() {\n        return axios.got(API_URL + 'admin', { headers : authHeader() })\n    }\n}\n\nexport default new UserService();","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","\nimport React, { Component, useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\nimport TransactionService from \"./services/transaction.service\";\n\nimport { Login, Register, Home, Profile, BoardUser, BoardModerator, BoardAdmin } from \"./components/index\";\n\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"  \n  const [transactions, setTransaction] = useState([]);\n\n  function foo() {\n      console.log('Foo it!');\n      TransactionService.getTransactions().then(res => {\n          console.log('RES IS..',res.data);\n          return setTransaction(res.data)\n\n      })\n    //   return setTransaction([\"foo\"])\n  }\n  \n  return (\n    <div>\n      <p>You clicked {JSON.stringify(transactions)} times</p>\n      <button onClick={foo}>\n        Click me\n      </button>\n    </div>\n  );\n}\n\nexport default Example;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}