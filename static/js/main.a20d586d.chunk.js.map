{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/profile.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/board-user.component.js","components/home.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","res","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","username","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","response","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","Profile","currentUser","getCurrentUser","substring","substr","id","roles","map","index","isEmail","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","Authorization","get","headers","got","BoardUser","content","UserService","getUserBoard","Home","getPublicContent","App","logOut","showModeratorBoard","showAdminBoard","undefined","includes","logout","to","href","onClick","exact","path","component","BoardModerator","BoardAdmin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a20d586d.chunk.js","sourcesContent":["import axios from \"axios\";\n//TODO SET API\nconst API_URL = \"http://localhost:8080/api/auth\";\n\nclass AuthService {\n    login(email, password) {\n        return axios.post(API_URL + 'signin', {\n            email, password\n        }).then(res => {\n            if(res.data.accessToken){\n                localStorage.setItem('user', JSON.stringify(res.data));\n            }\n\n            return res.data;\n        })\n    }\n\nlogout() {\n    localStorage.removeItem(\"user\");\n  }\n\n//TODO add encryption\nregister(email,password) {\n    return axios.post(API_URL + 'signup', {\n        email,password\n    })\n}\n\ngetCurrentUser(){\n    return JSON.parse(localStorage.getItem('user'));\n}\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n    if (!value) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This field is required!\n        </div>\n      );\n    }\n  };\n  \n  export default class Login extends Component {\n\n    //TODO change to hooks\n    constructor(props) {\n      super(props);\n      this.handleLogin = this.handleLogin.bind(this);\n      this.onChangeUsername = this.onChangeUsername.bind(this);\n      this.onChangePassword = this.onChangePassword.bind(this);\n  \n      this.state = {\n        password: \"\",\n        loading: false,\n        message: \"\"\n      };\n    }\n  \n    onChangeUsername(e) {\n      this.setState({\n        username: e.target.value\n      });\n    }\n  \n    onChangePassword(e) {\n      this.setState({\n        password: e.target.value\n      });\n    }\n  \n    handleLogin(e) {\n      e.preventDefault();\n  \n      this.setState({\n        message: \"\",\n        loading: true\n      });\n  \n      this.form.validateAll();\n  \n      if (this.checkBtn.context._errors.length === 0) {\n        AuthService.login(this.state.username, this.state.password).then(\n          () => {\n            this.props.history.push(\"/profile\");\n            window.location.reload();\n          },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n  \n            this.setState({\n              loading: false,\n              message: resMessage\n            });\n          }\n        );\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  \n    render() {\n      return (\n        <div className=\"col-md-12\">\n          <div className=\"card card-container\">\n            {/* <img\n              src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n              alt=\"profile-img\"\n              className=\"profile-img-card\"\n            /> */}\n  \n            <Form\n              onSubmit={this.handleLogin}\n              ref={c => {\n                this.form = c;\n              }}\n            >\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChangeUsername}\n                  validations={[required]}\n                />\n              </div>\n  \n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangePassword}\n                  validations={[required]}\n                />\n              </div>\n  \n              <div className=\"form-group\">\n                <button\n                  className=\"btn btn-primary btn-block\"\n                  disabled={this.state.loading}\n                >\n                  {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Login</span>\n                </button>\n              </div>\n  \n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={c => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n          </div>\n        </div>\n      );\n    }\n  }\n  ","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    if(!currentUser) return <div><h2>NO current user for profile</h2></div>\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.email}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          {/* <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          /> */}\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if(user && user.accessToken){\n        return { Authorization: 'Bearer' + user.accessToken };\n    }else return {};\n}\n\n//TODO Backend\n// export default function authHeader() {\n//     const user = JSON.parse(localStorage.getItem('user'));\n  \n//     if (user && user.accessToken) {\n//       // for Node.js Express back-end\n//       return { 'x-access-token': user.accessToken };\n//     } else {\n//       return {};\n//     }\n//   }","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n    getPublicContent(){\n        return axios.get(API_URL+'all');\n    }\n\n    getUserBoard() {\n        return axios.get(API_URL + 'user', { headers: authHeader() });\n    }\n\n    getModeratorBoard() {\n        return axios.get(API_URL + 'mod', {headers : authHeader() })\n    }\n\n    getAdminBoard() {\n        return axios.got(API_URL + 'admin', { headers : authHeader() })\n    }\n}\n\nexport default new UserService();","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport { Login, Register, Home, Profile, BoardUser, BoardModerator, BoardAdmin } from \"./components/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          {/* <Link to={\"/\"} className=\"navbar-brand\">\n            bezKoder\n          </Link> */}\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}